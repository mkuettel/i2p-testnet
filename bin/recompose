#!/usr/bin/env bash

set -eu -o pipefail
base_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
reseed_netdb_dir="${base_dir}/docker/volumes/reseed-netDb"

# shellcheck source=../lib/compose.bash
source "$base_dir"/lib/compose.bash

display_help() {
    echo "Usage: recompose [-h] [-t] [config-file]"
    echo ""
    echo "  -h              Show this help screen"
    echo "  -c              start with clean new volumes"
    echo "  config-file     The JSON configuration file to use to"
    echo "                  configure the testnet"
    echo "                  Default: config.json"
}


# Variables for command line arguments
new_volumes=0

OPTIND=1
while getopts "h?c" opt; do
    case "$opt" in
    h|\?)
        display_help
        exit 0
        ;;
    c)  new_volumes=1
        ;;
    # f)  output_file=$OPTARG
    #     ;;
    esac
done

shift $((OPTIND-1))

[ "${1:-}" = "--" ] && shift
config_file="${1:-"$base_dir/config.json"}"


NETWORK_NAME="$(getconf network.name)"

if docker network list | grep -F "$NETWORK_NAME"; then
    echo "Removing network $NETWORK_NAME as it already exists."
    docker network rm "$NETWORK_NAME"
fi

COMPOSE_ARGS=("-f" "$base_dir"/docker-compose.yml)

if [[ "$(getconf network.private)" != "true" ]]; then
    echo "Using public network configuration"
    COMPOSE_ARGS+=("-f" "$base_dir/docker/publicnet.override.yml")
else
    echo "Using private network configuration"
    export NUM_ROUTER_INFOS="$(getconf 'reseeder.router_infos_per_node')"
    export NUM_SU3_FILES="$(getconf 'reseeder.num_different_seed_files')"
    export RESEED_IP=10.23.0.2

    COMPOSE_ARGS+=("-f" "$base_dir/docker/privatenet.override.yml")
fi

num_nodes="$(getconf 'nodes.amount')"
echo -n "Generate configurations for $num_nodes nodes ... "
generate_all_node_configs "$num_nodes" > "$base_dir"/docker/nodes.generated.override.yml
echo "done"

COMPOSE_ARGS+=("-f" "$base_dir"/docker/nodes.generated.override.yml)

UP_ARGS=(--build --remove-orphans --force-recreate --always-recreate-deps)
if [ "$new_volumes" -eq 1 ]; then
    echo "Cleaning up volumes and old data..."
    cleanup_volume_dirs
    UP_ARGS+=("--renew-anon-volumes")
fi
echo "Creating new volume directories"
# we do this do make sure they're owned by us
# and not by root when the docker container starts
# NOTE: this requires the host user to run this script to have uid 1000
create_volume_dirs "$num_nodes"

export COMPOSE_PROJECT_NAME=testnet
export NETWORK_NAME

if [[ "$(getconf network.private)" == "true" ]]; then
    # delete remains of previous run, if they're there
    rm "$reseed_netdb_dir"/.router-infos-collected 2>/dev/null || true
    rm "$reseed_netdb_dir"/routerInfo-*.dat 2>/dev/null || true

    collect_router_infos &
fi

docker-compose "${COMPOSE_ARGS[@]}" \
    up "${UP_ARGS[@]}" || \
    read -rp "It seems something went wrong. Press enter to stop the testnet...." _

docker-compose "${COMPOSE_ARGS[@]}" down
